<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xxyh.mybatis.mapper.OrdersMapperCustom">
	<!-- 查询订单关联查询用户,使用resultType -->
	<select id="findOrdersUser" resultType="OrdersCustom">
		SELECT
			orders.*,
			user.username,
			user.sex,
			user.address
		FROM
			orders,
			USER
		WHERE orders.user_id = user.id
	</select>
	
	<!-- 订单关联查询用户的resultMap
		将查询结果映射到com.xxyh.mybatis.pojo.Orders中
	 -->
	<resultMap type="com.xxyh.mybatis.pojo.Orders" id="OrdersUserResultMap">
		<!-- 配置映射订单信息 -->
		<!-- id:指定查询列中的唯一标识，订单信息中的唯一标识，如果是多个列组成唯一标识，配置多个id -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 配置映射的关联信息 -->
		<!-- association:用于映射关联查询单个对象的信息
			property:关联查询的用户信息映射到Orders中哪个属性
		 -->
		<association property="user" javaType="com.xxyh.mybatis.pojo.User">
			<!-- id:关联查询用户的唯一标识 
				column:指定唯一标识用户信息的列（外键）
				javaType:映射到的user的哪个属性
			-->
			<id column="user_id" property="id"/>
			<result column="username" property="address"/>
			<result column="sex" property="sex"/>
			<result column="address" property="address"/>
		</association>
	</resultMap>
	
	<!-- 查询订单关联查询用户，使用resultMap -->
	<select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap" useCache="false">
		SELECT
			orders.*,
			user.username,
			user.sex,
			user.address
		FROM
			orders,
			USER
		WHERE orders.user_id = user.id
	</select>
	
	<!-- 订单及订单明细的resultMap 
		使用extends继承,不用定义订单信息和用户信息的映射
	-->
	<resultMap type="com.xxyh.mybatis.pojo.Orders" id="OrdersAndOrderDetailResultMap" extends="OrdersUserResultMap">
		<!-- 订单信息 -->
		<!-- 用户信息 -->
		<!-- 订单明细信息 
			一个订单关联多条明细，使用collection进行映射
			collection：对关联查询到多条记录映射到集合对象中
			ofType:指定映射到集合属性中pojo的类型
		-->
		<collection property="orderdetails" ofType="com.xxyh.mybatis.pojo.Orderdetail">
			<!-- id:订单明细的唯一标识  
				property:要将订单明细的唯一标识映射到com.xxyh.mybatis.pojo.Orderdetail的哪个属性(外键)
			-->
			<id column="orderdetail_id" property="id"/>
			<result column="items_id" property="itemsId"/>
			<result column="items_num" property="itemsNum"/>
			<result column="orders_id" property="ordersId"/>
		</collection>
	</resultMap>
	<select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetailResultMap">
		SELECT 
		  orders.*,
		  user.username,
		  user.sex,
		  user.address,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_id,
		  orderdetail.items_num,
		  orderdetail.orders_id
		FROM
		  orders,
		  USER,
		  orderdetail 
		WHERE orders.user_id = user.id 
		  AND orderdetail.orders_id = orders.id 
	</select>
	
	<resultMap type="com.xxyh.mybatis.pojo.User" id="UserAndItemsResultMap">
		<!-- 用户信息 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<result column="address" property="address"/>
		<!-- 订单信息:一个用户对于多个订单 -->
		<collection property="ordersList" ofType="com.xxyh.mybatis.pojo.Orders">
			<id column="id" property="id"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			
			<!-- 订单明细:一个订单包含多个明细 -->
			<collection property="orderdetails" ofType="com.xxyh.mybatis.pojo.Orderdetail">
				<id column="orderdetail_id" property="id"/>
				<result column="items_id" property="itemsId"/>
				<result column="items_num" property="itemsNum"/>
				<result column="orders_id" property="ordersId"/>
				<!-- 商品信息:一个订单明细对于一个商品 -->
				<association property="items" javaType="com.xxyh.mybatis.pojo.Items">
					<id column="items_id" property="id"/>
					<result column="items_name" property="name"/>
					<result column="items_detail" property="detail"/>
					<result column="items_price" property="price"/>
				</association>
			</collection>
		</collection>
		
	</resultMap>
	
	<!-- 查询用户及购买的商品信息，使用resultmap -->
	<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
	    SELECT 
		  orders.*,
		  user.username,
		  user.sex,
		  user.address,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_id,
		  orderdetail.items_num,
		  orderdetail.orders_id,
		  items.name items_name,
		  items.detail items_detail,
		  items.price items_price 
		FROM
		  orders,
		  USER,
		  orderdetail,
		  items 
		WHERE orders.user_id = user.id 
		  AND orderdetail.orders_id = orders.id 
		  AND orderdetail.items_id = items.id ;
	</select>
	
	<resultMap type="com.xxyh.mybatis.pojo.Orders" id="findUsersUserLazyLoadingResultMap">
		<!-- 对订单信息进行映射配置 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 实现对用户信息进行延迟加载 
			select:指定延迟加载需要执行的statement的id(根据user_id查询用户信息的statement)
				使用UserMapper.xml中的findUserById完成根据用户id(user_id)查询用户信息，
				如果findUserById不再本配置文件中，需要添加namespace
			column：订单信息中关联用户信息查询的列，是user_id
			关联查询的sql：
			SELECT orders.*,
			    (SELECT username FROM USER WHERE orders.user_id=user.id) username,
			    (SELECT sex FROM USER WHERE orders.user_id = user.id) sex
			FROM orders;
		-->
		<association property="user" javaType="com.xxyh.mybatis.pojo.User" select="com.xxyh.mybatis.mapper.UserMapper.findUserById" column="user_id">
			
		</association>
	</resultMap>
	<!-- 查询订单关联查询用户，用户信息需要延迟加载 -->
	<select id="findUsersUserLazyLoading" resultMap="findUsersUserLazyLoadingResultMap">
		SELECT * FROM orders
	</select>
</mapper>